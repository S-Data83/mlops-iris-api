events {
    worker_connections 1024; # Nombre maximum de connexions par processus
}

http {
    # Définit la zone de limitation
    limit_req_zone $binary_remote_addr zone=apilimit:10m rate=10r/s; 

    upstream iris-apis {
        server mlops-iris-api:8000;
    }

    # Définition de notre serveur http
    server {
        listen 80;
        server_name localhost;

        # Redirige toutes les requêtes HTTP vers HTTPS
        return 301 https://$host$request_uri;
    }

    # Définition de notre nouveau serveur https
    server {
        listen 443 ssl; # Écoute sur le port 443 et active SSL
        server_name localhost; # Nom de domaine ou IP que ce serveur gère

        # Chemins vers les certificats SSL à l'intérieur du conteneur Nginx
        ssl_certificate /etc/nginx/certs/nginx.crt;
        ssl_certificate_key /etc/nginx/certs/nginx.key;

        # Protocoles et chiffrements SSL
        ssl_protocols TLSv1.2 TLSv1.3; # N'autorise que les versions modernes de TLS
        ssl_ciphers HIGH:!aNULL:!MD5; # Liste des suites de chiffrement autorisées
        ssl_prefer_server_ciphers on; # Préfère les chiffrements du serveur

        

        location /predict {

            auth_basic "API Acess Protected"; # Message affiché à l'utilisateur
            auth_basic_user_file /etc/nginx/.htpasswd; # Chemin vers le fichier .htpasswd dans le conteneur

            # Applique la limitation au bloc `location /predict`
            limit_req zone=apilimit burst=5 nodelay;

            proxy_pass http://iris-apis;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        location /nginx_status {
            stub_status on; # Active le module stub_status
            access_log off; # Ne pas logguer les accès à cet endpoint
            #allow localhost; # Autorise l'accès uniquement depuis localhost (l'exporter)
            allow 172.18.0.0/16; # Ou depuis le réseau Docker
            deny all; # Bloque tout autre accès
        }
    }
}